{"version":3,"sources":["webpack:///./src/utils/dispatch.js","webpack:///./src/utils/config.js","webpack:///./src/utils/queries.js","webpack:///./src/map-layers.js","webpack:///./src/utils/constants.js","webpack:///./src/components/LeafletMap.js","webpack:///./src/components/InfoWindow.js","webpack:///./src/components/LoadingIndicator.js","webpack:///./src/utils/data.js","webpack:///./src/index.js","webpack:///./src/utils/parse-hash.js","webpack:///./src/components/TitleDetails.js"],"names":["dispatch","d3","cartoSheetSyncTable","citiesCartoQuery","countiesCartoQuery","statesCartoQuery","countriesCartoQuery","rentStrikeIcon","L","Icon","iconUrl","iconSize","iconAnchor","className","mapLayersConfig","cities","name","type","query","queries","zIndex","props","layer","feature","properties","municipality","state","country","jurisdictionName","jurisdictionType","popupName","policyStrength","policyStrengthLanguage","range","style","color","strokeColorScale","colorNoData","fillColor","fillColorScale","fillOpacity","radius","pointRadius","weight","strokeWeight","pointToLayer","latlng","circleMarker","counties","county","states","admin","nations","name_en","rentStrikes","sheetId","marker","icon","window","undefined","defaultMapConfig","lat","lng","z","TOTAL_NUMBER_OF_MAP_LAYERS","Object","keys","length","isMobile","document","querySelector","offsetWidth","LeafletMap","config","Map","innerHTML","map","invalidateSize","closePopup","error","console","toggleLoadingIndicator","layerGroup","geojson","markerLayer","markerClusterGroup","key","layerConfig","data","self","geoJson","features","filter","Strike_Status","Latitude","Longitude","status","index","id","geometry","coordinates","maxClusterRadius","on","call","addLayer","bindPopup","template","Mustache","render","rentStrikePopupTemplate","Error","popupTemplate","dataLayers","set","addTo","fixZOrder","handleAllLayersAdded","size","forEach","layersControl","addOverlay","Array","from","values","sort","a","b","hasLayer","bringToFront","isLoading","this","init","bindListeners","zoomControl","attributionControl","maxBounds","setView","control","attribution","prefix","addAttribution","zoom","position","layers","collapsed","basemapLayer","tileLayer","minZoom","maxZoom","resizeWindow","e","getElementById","classList","add","popup","_latlng","getZoom","animate","remove","setTimeout","addEventListener","clearTimeout","handleWindowResize","handleInfoWindowClose","handleAddLayer","handleLayerError","InfoWindow","infowindowContainer","infowindowTemplate","rentStrikeInfowindowTemplate","closeInfoWindow","LoadingIndicator","loadingContainer","hidden","show","hide","cartoSqlApiBaseUri","handleFetchSuccess","handleFetchFailure","getCartoData","format","fetch","encodeURIComponent","res","ok","json","getSheetsData","text","csvParse","autoType","entries","mapConfig","input","location","hash","slice","split","inputVals","i","value","isNaN","parseInt","parseFloat","rentstrike","parseUriHash","titleDetails","open","toggleTitleDetails","openTitleDetails","closeTitleDetails","getData"],"mappings":"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","file":"index.a972445e87dedd25f7ac.js","sourcesContent":["// d3-dispatch is a lightweight pub/sub module\n// for more see: https://github.com/d3/d3-dispatch\n\n// using dispatch.on() or dispatch.call() with one of the\n// following strings will respond or invoke an event\nconst events = [\n  \"fetch-map-data-resolve\",\n  \"fetch-map-data-reject\",\n  \"viewport-size\",\n  \"render-infowindow\",\n  \"close-infowindow\",\n  \"title-details-toggle\",\n  \"title-details-close\",\n  \"title-details-open\",\n  \"show-loading-indicator\",\n  \"hide-loading-indicator\",\n];\n\n/**\n * dispatch usage:\n * dispatch.call(\"<event-name>\", <optional this context>, <optional value>);\n * dispatch.on(\"<event-name>\", <callback function>)\n * dispatch.on(\"<event-name.sub-name>\", <second callback function>)\n * dispatch.on(\"<event-name.sub-other-name>\", <third callback function>)\n * etc...\n */\nexport const dispatch = d3.dispatch(...events);\n","// unique id of the Google sheet that imports desired columns from the rent-strike form responses public sheet\nexport const renStrikeSheetId = \"1rCZfNXO3gbl5H3cKhGXKIv3samJ1KC4nLhCwwZqrHvU\";\n\n// name of AEMP's CARTO account\nexport const aempCartoAccount = \"ampitup\";\n\n// table in CARTO that syncs with the Google sheet data\nexport const cartoSheetSyncTable = \"public.emergency_tenant_protections_scored\";\nexport const cartoCountiesTable = \"public.us_county_boundaries\";\nexport const cartoStatesTable = \"public.states_and_provinces_global\";\nexport const cartoNationsTable = \"public.countries\";\n","import {\n  cartoSheetSyncTable,\n  cartoCountiesTable,\n  cartoStatesTable,\n  cartoNationsTable,\n} from \"./config\";\n\n/**\n * SQL queries that are passed to the CARTO SQL API\n * for more info on the SQL API see: https://carto.com/developers/sql-api/\n */\n\nexport const citiesCartoQuery = `\nSELECT\n  municipality, state, country, range, \n  policy_type, policy_summary, link, the_geom\nFROM ${cartoSheetSyncTable}\nWHERE the_geom is not null and admin_scale = 'City'\nORDER BY range`;\n\nexport const countiesCartoQuery = `\nSELECT\n  c.the_geom, c.county, c.state, m.range, \n  m.policy_type, m.policy_summary, m.link, m.range\nFROM ${cartoCountiesTable} c\nJOIN ${cartoSheetSyncTable} m\nON ST_Intersects(c.the_geom, m.the_geom)\nWHERE m.the_geom IS NOT NULL\n  AND m.admin_scale = 'County'\n  OR m.admin_scale = 'City and County'\nORDER BY m.range`;\n\nexport const statesCartoQuery = `\nSELECT\n  s.the_geom, s.name, s.admin, s.sr_adm0_a3,\n  m.range, m.iso, m .policy_type, m.policy_summary, m.link\nFROM ${cartoStatesTable} s\nINNER JOIN ${cartoSheetSyncTable} m\n  ON s.name = m.state\n  AND s.sr_adm0_a3 = m.iso\n  AND m.admin_scale = 'State'\nORDER BY m.range`;\n\nexport const countriesCartoQuery = `\nSELECT \n  c.the_geom, c.adm0_a3, c.name_en, m.range,\n  m.policy_type, m.policy_summary, m.link\nFROM ${cartoNationsTable} c\nINNER JOIN ${cartoSheetSyncTable} m\n  ON c.adm0_a3 = m.iso\n  AND m.admin_scale = 'Country'\nORDER BY m.range`;\n","import {\n  colorNoData,\n  fillColorScale,\n  strokeColorScale,\n  strokeWeight,\n  pointRadius,\n  fillOpacity,\n  policyStrengthLanguage,\n} from \"utils/constants\";\nimport { renStrikeSheetId } from \"./utils/config\";\nimport * as queries from \"./utils/queries\";\n\nconst rentStrikeIcon = new L.Icon({\n  iconUrl: \"./assets/mapIcons/rent-strike.svg\",\n  iconSize: [40, 40],\n  iconAnchor: [20, 20],\n  className: \"icon-rent-strike\",\n});\n\nexport const mapLayersConfig = {\n  cities: {\n    name: \"Cities\",\n    type: \"point\",\n    query: queries.citiesCartoQuery,\n    zIndex: 1,\n    props(layer) {\n      const { municipality, state, country } = layer.feature.properties;\n      return {\n        ...layer.feature.properties,\n        // Build city name with state and country if supplied\n        jurisdictionName: `${municipality}${state ? `, ${state}` : \"\"}${\n          country ? `, ${country}` : \"\"\n        }`,\n        jurisdictionType: \"City\",\n        popupName: municipality,\n        policyStrength: policyStrengthLanguage[layer.feature.properties.range],\n      };\n    },\n    style(feature) {\n      return {\n        color: strokeColorScale[feature.properties.range] || colorNoData,\n        fillColor: fillColorScale[feature.properties.range] || colorNoData,\n        fillOpacity: fillOpacity,\n        radius: pointRadius,\n        weight: strokeWeight,\n      };\n    },\n    pointToLayer(feature, latlng) {\n      return L.circleMarker(latlng, mapLayersConfig.cities.style(feature));\n    },\n  },\n\n  counties: {\n    name: \"Counties\",\n    type: \"polygon\",\n    query: queries.countiesCartoQuery,\n    zIndex: 2,\n    props(layer) {\n      const { state, county } = layer.feature.properties;\n      return {\n        ...layer.feature.properties,\n        // Show county with state if state field is set\n        jurisdictionName: `${county}${state ? `, ${state}` : \"\"}`,\n        jurisdictionType: \"County\",\n        popupName: `${county}${state ? `, ${state}` : \"\"}`,\n        policyStrength: policyStrengthLanguage[layer.feature.properties.range],\n      };\n    },\n    style(feature) {\n      return {\n        color: strokeColorScale[feature.properties.range] || colorNoData,\n        fillColor: fillColorScale[feature.properties.range] || colorNoData,\n        fillOpacity: fillOpacity,\n        radius: pointRadius,\n        weight: strokeWeight,\n      };\n    },\n  },\n\n  states: {\n    name: \"States\",\n    type: \"polygon\",\n    query: queries.statesCartoQuery,\n    zIndex: 3,\n    props(layer) {\n      const { name, admin } = layer.feature.properties;\n      return {\n        ...layer.feature.properties,\n        ...layer.feature.properties,\n        jurisdictionName: `${name}${admin ? `, ${admin}` : \"\"}`,\n        jurisdictionType: \"State/Province\",\n        popupName: name,\n        policyStrength: policyStrengthLanguage[layer.feature.properties.range],\n      };\n    },\n    style(feature) {\n      return {\n        color: strokeColorScale[feature.properties.range] || colorNoData,\n        fillColor: fillColorScale[feature.properties.range] || colorNoData,\n        fillOpacity: fillOpacity,\n        radius: pointRadius,\n        weight: strokeWeight,\n      };\n    },\n  },\n\n  nations: {\n    name: \"Nations\",\n    type: \"polygon\",\n    query: queries.countriesCartoQuery,\n    zIndex: 4,\n    props(layer) {\n      const { name_en } = layer.feature.properties;\n      return {\n        ...layer.feature.properties,\n        jurisdictionName: name_en,\n        jurisdictionType: \"Country\",\n        popupName: name_en,\n        policyStrength: policyStrengthLanguage[layer.feature.properties.range],\n      };\n    },\n\n    style(feature) {\n      return {\n        color: strokeColorScale[feature.properties.range] || colorNoData,\n        fillColor: fillColorScale[feature.properties.range] || colorNoData,\n        fillOpacity: fillOpacity,\n        radius: pointRadius,\n        weight: strokeWeight,\n      };\n    },\n  },\n\n  rentStrikes: {\n    name: \"Rent Strikes\",\n    type: \"marker-cluster\",\n    query: null,\n    sheetId: renStrikeSheetId,\n    zIndex: 0, // markers have their very own layer pane in Leaflet so don't need a z-index value\n    props(layer) {\n      return layer.feature.properties;\n    },\n    pointToLayer(feature, latlng) {\n      return L.marker(latlng, {\n        icon: rentStrikeIcon,\n      });\n    },\n  },\n};\n\nwindow.mapLayersConfig = mapLayersConfig;\n","import { mapLayersConfig } from \"../map-layers\";\n\n// color values come from this ColorBrewer url:\n// https://colorbrewer2.org/#type=sequential&scheme=YlGn&n=7\nexport const colorNoData = \"#939393\";\nexport const fillColorScale = [undefined, \"#d9f0a3\", \"#78c679\", \"#238443\"];\nexport const strokeColorScale = [undefined, \"#addd8e\", \"#41ab5d\", \"#005a32\"];\n\n// global map layer styling variables\nexport const strokeWeight = 1.5;\nexport const pointRadius = 8;\nexport const fillOpacity = 0.7;\n\n// corresponds to fill & stroke color scales above\nexport const policyStrengthLanguage = [\n  \"\",\n  \"Few protections in place\",\n  \"Some protections in place\",\n  \"Many protections in place\",\n];\n\n// note: this matches the breakpoint in styles.css\nexport const MOBILE_BREAKPOINT = 640;\nexport const DESKTOP_BREAKPOINT = 1200;\n\nexport const defaultMapConfig = {\n  lat: 40.67,\n  lng: -97.23,\n  z: 4,\n  nations: false,\n  states: true,\n  cities: true,\n  counties: true,\n  rentStrikes: true,\n};\n\nexport const TOTAL_NUMBER_OF_MAP_LAYERS = Object.keys(mapLayersConfig).length;\n\nexport const isMobile = () =>\n  document.querySelector(\"body\").offsetWidth < MOBILE_BREAKPOINT;\n","import { dispatch } from \"utils/dispatch\";\nimport {\n  defaultMapConfig,\n  isMobile,\n  TOTAL_NUMBER_OF_MAP_LAYERS,\n} from \"utils/constants\";\n\nexport class LeafletMap {\n  // dataLayers: look up table to store layer groups in the form of\n  // { layerGroup: <Leaflet layer group>, zIndex: <integer> }\n  dataLayers = new Map();\n\n  // Mustache templates for popup HTML\n  popupTemplate = document.querySelector(\".popup-template\").innerHTML;\n  rentStrikePopupTemplate = document.querySelector(\".rentstrike-popup-template\")\n    .innerHTML;\n\n  constructor(config) {\n    this.config = config || defaultMapConfig;\n    this.init();\n    this.bindListeners();\n  }\n\n  init() {\n    const { lat, lng, z } = this.config;\n\n    this.map = L.map(\"map\", {\n      zoomControl: false,\n      attributionControl: false,\n      maxBounds: [\n        [-85.05, -190], // lower left\n        [85.05, 200], // upper right\n      ],\n    });\n    this.map.setView([lat, lng], z);\n\n    this.attributionControl = L.control\n      .attribution({ prefix: \"Data sources by: \" })\n      .addAttribution(\n        \"<a href='https://www.antievictionmap.com/' target='_blank'>Anti-Eviction Mapping Project</a>\"\n      )\n      .addAttribution(\n        \"<a href='https://www.openstreetmap.org' target='_blank'>Open Street Map Contributors</a>\"\n      )\n      .addTo(this.map);\n\n    this.zoomControl = L.control\n      .zoom({ position: \"bottomright\" })\n      .addTo(this.map);\n\n    this.layersControl = L.control\n      .layers(null, null, { position: \"topright\", collapsed: false })\n      .addTo(this.map);\n\n    this.basemapLayer = L.tileLayer(\n      \"https://a.basemaps.cartocdn.com/rastertiles/light_all/{z}/{x}/{y}@2x.png\",\n      {\n        minZoom: 1,\n        maxZoom: 18,\n      }\n    ).addTo(this.map);\n  }\n\n  bindListeners() {\n    const self = this;\n    this.map.on(\"popupopen\", function (e) {\n      document.getElementById(\"root\").classList.add(\"aemp-popupopen\");\n\n      if (isMobile()) {\n        dispatch.call(\"title-details-close\");\n        self.map.invalidateSize();\n      }\n\n      self.map.setView(e.popup._latlng, self.map.getZoom(), { animate: true });\n    });\n\n    this.map.on(\"popupclose\", function () {\n      document.getElementById(\"root\").classList.remove(\"aemp-popupopen\");\n      dispatch.call(\"close-infowindow\");\n      if (isMobile())\n        setTimeout(function () {\n          self.map.invalidateSize();\n        }, 100);\n    });\n\n    this.map.on(\"click\", function () {\n      if (isMobile()) {\n        dispatch.call(\"title-details-close\");\n      }\n    });\n\n    // Apply correct relative order of layers when adding from control.\n    this.map.on(\"overlayadd\", () => {\n      this.fixZOrder();\n    });\n\n    let resizeWindow;\n    window.addEventListener(\"resize\", function () {\n      clearTimeout(resizeWindow);\n      resizeWindow = setTimeout(self.handleWindowResize, 250);\n    });\n\n    dispatch.on(\"close-infowindow.map\", this.handleInfoWindowClose);\n    dispatch.on(\"fetch-map-data-resolve.map\", this.handleAddLayer);\n    dispatch.on(\"fetch-map-data-reject.map\", this.handleLayerError);\n  }\n\n  handleWindowResize = () => {\n    if (isMobile()) {\n      this.map.invalidateSize();\n    }\n  };\n\n  handleInfoWindowClose = () => {\n    this.map.closePopup();\n    if (isMobile()) {\n      this.map.invalidateSize();\n    }\n  };\n\n  handleAddLayerError = (error) => {\n    console.error(error);\n    this.toggleLoadingIndicator(false); //hide loading indicator\n  };\n\n  handleAddLayer = ({ key, layerConfig, data }) => {\n    const self = this;\n    let layerGroup;\n\n    switch (layerConfig.type) {\n      case \"point\":\n        layerGroup = handlePointLayer();\n        break;\n\n      case \"polygon\":\n        layerGroup = handlePolygonLayer();\n        break;\n\n      case \"marker-cluster\":\n        layerGroup = handleMarkerCluster();\n        break;\n\n      default:\n        throw Error(\"Unrecognized map layer type\");\n    }\n\n    function handlePointLayer() {\n      return L.geoJson(data, {\n        pointToLayer: layerConfig.pointToLayer,\n      });\n    }\n\n    function handlePolygonLayer() {\n      return L.geoJson(data, {\n        style(feature) {\n          return layerConfig.style(feature);\n        },\n      });\n    }\n\n    function handleMarkerCluster() {\n      // rent strikes data is regular JSON & requires additional parsing for conversion to GeoJSON\n      const geojson = {\n        type: \"FeatureCollection\",\n        features: data\n          .filter(\n            ({ Strike_Status, Latitude, Longitude }) =>\n              Strike_Status !== null && Longitude !== null && Latitude !== null\n          )\n          .map(({ Strike_Status, ...rest }) => ({\n            status:\n              Strike_Status === \"Yes / Sí / 是 / Oui\" || Strike_Status === \"Yes\"\n                ? \"Yes\"\n                : \"Unsure\",\n\n            ...rest,\n          }))\n          .map(({ Longitude, Latitude, ...rest }, index) => ({\n            type: \"Feature\",\n            id: index,\n            properties: rest,\n            geometry: {\n              type: \"Point\",\n              coordinates: [Longitude, Latitude],\n            },\n          })),\n      };\n\n      const markerLayer = L.geoJson(geojson, {\n        pointToLayer: layerConfig.pointToLayer,\n      });\n\n      const markerClusterGroup = L.markerClusterGroup({\n        maxClusterRadius: 40,\n      }).on(\"clusterclick\", function () {\n        if (isMobile()) {\n          dispatch.call(\"title-details-close\");\n        }\n      });\n\n      markerClusterGroup.addLayer(markerLayer).bindPopup(function (layer) {\n        dispatch.call(\"render-infowindow\", null, {\n          template: \"rentstrikes\",\n          data: layer.feature.properties,\n        });\n\n        return Mustache.render(\n          self.rentStrikePopupTemplate,\n          layerConfig.props(layer)\n        );\n      });\n\n      return markerClusterGroup;\n    }\n\n    if (layerConfig.type !== \"marker-cluster\") {\n      layerGroup.bindPopup(function (layer) {\n        const props = layerConfig.props(layer);\n        dispatch.call(\"render-infowindow\", null, {\n          template: \"protections\",\n          data: props,\n        });\n        return Mustache.render(self.popupTemplate, props);\n      });\n    }\n\n    this.dataLayers.set(layerConfig.name, {\n      layerGroup,\n      zIndex: layerConfig.zIndex,\n    });\n\n    if (this.config[key]) {\n      layerGroup.addTo(this.map);\n    }\n\n    this.fixZOrder();\n    this.handleAllLayersAdded();\n  };\n\n  handleAllLayersAdded = () => {\n    // if all layers have been added to this.dataLayers add the layers toggle UI\n    if (this.dataLayers.size !== TOTAL_NUMBER_OF_MAP_LAYERS) {\n      return;\n    }\n\n    this.dataLayers.forEach(({ layerGroup }, name) => {\n      this.layersControl.addOverlay(layerGroup, name);\n    });\n\n    //hide the loading indicator\n    this.toggleLoadingIndicator(false);\n  };\n\n  fixZOrder = () => {\n    const layers = Array.from(this.dataLayers.values()).sort(\n      (a, b) => b.zIndex - a.zIndex\n    );\n    layers.forEach(({ layerGroup }) => {\n      if (this.map.hasLayer(layerGroup)) {\n        layerGroup.bringToFront();\n      }\n    });\n  };\n\n  toggleLoadingIndicator = (isLoading) => {\n    if (isLoading) {\n      dispatch.call(\"show-loading-indicator\");\n    } else {\n      dispatch.call(\"hide-loading-indicator\");\n    }\n  };\n}\n","import { dispatch } from \"utils/dispatch\";\n\nexport class InfoWindow {\n  infowindowContainer = document.getElementById(\"aemp-infowindow-container\");\n\n  infowindowTemplate = document.getElementById(\"aemp-infowindow-template\")\n    .innerHTML;\n\n  rentStrikeInfowindowTemplate = document.getElementById(\n    \"aemp-rentstrike-infowindow-template\"\n  ).innerHTML;\n\n  constructor() {\n    this.bindListeners();\n  }\n\n  bindListeners() {\n    dispatch.on(\"render-infowindow\", this.render);\n    dispatch.on(\"close-infowindow.self\", this.closeInfoWindow);\n  }\n\n  closeInfoWindow = () => {\n    document.getElementById(\"root\").classList.remove(\"aemp-popupopen\");\n    this.infowindowContainer.innerHTML = null;\n  };\n\n  render = (props) => {\n    const { template, data } = props;\n    switch (template) {\n      case \"protections\":\n        this.infowindowContainer.innerHTML = Mustache.render(\n          this.infowindowTemplate,\n          data\n        );\n        break;\n      case \"rentstrikes\":\n        this.infowindowContainer.innerHTML = Mustache.render(\n          this.rentStrikeInfowindowTemplate,\n          data\n        );\n        break;\n      default:\n        break;\n    }\n    this.infowindowContainer\n      .querySelector(\".aemp-infowindow-close\")\n      .addEventListener(\"click\", () => dispatch.call(\"close-infowindow\"));\n    document.getElementById(\"root\").classList.add(\"aemp-popupopen\");\n  };\n}\n","import { dispatch } from \"utils/dispatch\";\n\nexport class LoadingIndicator {\n  loadingContainer = document.getElementById(\"loading-container\");\n\n  constructor() {\n    this.bindListeners();\n  }\n\n  bindListeners() {\n    dispatch.on(\"show-loading-indicator\", this.show);\n    dispatch.on(\"hide-loading-indicator\", this.hide);\n  }\n\n  show = () => {\n    // the default for the corresponding DOM element is false\n    this.loadingContainer.hidden = false;\n  };\n\n  hide = () => {\n    this.loadingContainer.hidden = true;\n  };\n}\n","import { aempCartoAccount } from \"./config\";\nimport { mapLayersConfig } from \"../map-layers\";\nimport { dispatch } from \"./dispatch\";\n\nconst cartoSqlApiBaseUri = `https://${aempCartoAccount}.carto.com/api/v2/sql`;\n\nfunction handleFetchSuccess(name, data) {\n  dispatch.call(name, null, data);\n}\n\nfunction handleFetchFailure(name, error) {\n  dispatch.call(name, null, error);\n}\n\nexport async function getCartoData(query, format = \"geojson\") {\n  const res = await fetch(\n    `${cartoSqlApiBaseUri}?q=${window.encodeURIComponent(\n      query\n    )}&format=${format}`\n  );\n\n  if (!res || !res.ok) {\n    throw Error(\"Unable to fetch Carto data\");\n  }\n\n  return res.json();\n}\n\nexport async function getSheetsData(sheetId) {\n  const res = await fetch(\n    `https://docs.google.com/spreadsheets/d/${sheetId}/export?format=csv&id=${sheetId}`\n  );\n\n  if (!res || !res.ok) {\n    throw Error(\"Unable to fetch sheets data\");\n  }\n\n  const text = await res.text();\n  return d3.csvParse(text, d3.autoType);\n}\n\nexport async function getData() {\n  for (let [key, layerConfig] of Object.entries(mapLayersConfig)) {\n    try {\n      const data =\n        layerConfig.query !== null\n          ? await getCartoData(layerConfig.query)\n          : await getSheetsData(layerConfig.sheetId);\n      handleFetchSuccess(\"fetch-map-data-resolve\", { key, layerConfig, data });\n    } catch (error) {\n      handleFetchFailure(\"fetch-map-data-reject\", error);\n    }\n  }\n}\n","import \"styles/index.scss\";\nimport { LeafletMap } from \"./components/LeafletMap\";\nimport { InfoWindow } from \"./components/InfoWindow\";\nimport { TitleDetails } from \"./components/TitleDetails\";\nimport { LoadingIndicator } from \"./components/LoadingIndicator\";\nimport { getData } from \"utils/data\";\nimport { parseUriHash } from \"utils/parse-hash\";\nimport { defaultMapConfig } from \"utils/constants\";\nimport { dispatch } from \"./utils/dispatch\";\n\nif (process.env.NODE_ENV !== \"production\") {\n  dispatch.on(\"fetch-map-data-resolve.debug\", console.log);\n  dispatch.on(\"fetch-map-data-reject.debug\", console.error);\n}\n\nconst mapConfig = parseUriHash(defaultMapConfig);\n\nnew LeafletMap(mapConfig);\nnew InfoWindow();\nnew TitleDetails();\nnew LoadingIndicator();\n\ngetData();\n","/**\n * parseUriHash\n * Check the url hash for params then override map default settings if any are present.\n * assumes params are as follows:\n * #lat=<float>&lng=<float>&z=<integer>&states=<boolean>&cities=<boolean>&counties=<boolean>&rentstrike=<boolean>\n * @param {*} mapConfig\n */\nexport function parseUriHash(mapConfig) {\n  let input = window.location.hash.slice(1).split(\"&\");\n  let inputVals = {};\n  let i = 0;\n\n  for (i; i < input.length; i++) {\n    let [key, value] = input[i].split(\"=\");\n    inputVals[key] = value;\n  }\n\n  if (!isNaN(inputVals.z)) {\n    mapConfig.z = parseInt(inputVals.z);\n  }\n\n  if (!isNaN(inputVals.lat)) {\n    mapConfig.lat = parseFloat(inputVals.lat);\n  }\n\n  if (!isNaN(inputVals.lng)) {\n    mapConfig.lng = parseFloat(inputVals.lng);\n  }\n\n  if (inputVals.cities !== undefined) {\n    if (inputVals.cities === \"true\") {\n      mapConfig.cities = true;\n    } else if (inputVals.cities === \"false\") {\n      mapConfig.cities = false;\n    }\n  }\n\n  if (inputVals.counties !== undefined) {\n    if (inputVals.counties === \"true\") {\n      mapConfig.counties = true;\n    } else if (inputVals.counties === \"false\") {\n      mapConfig.counties = false;\n    }\n  }\n\n  if (inputVals.states !== undefined) {\n    if (inputVals.states === \"true\") {\n      mapConfig.states = true;\n    } else if (inputVals.states === \"false\") {\n      mapConfig.states = false;\n    }\n  }\n\n  if (inputVals.nations !== undefined) {\n    if (inputVals.nations === \"true\") {\n      mapConfig.nations = true;\n    } else if (inputVals.nations === \"false\") {\n      mapConfig.nations = false;\n    }\n  }\n\n  if (inputVals.rentstrike !== undefined) {\n    if (inputVals.rentstrike === \"true\") {\n      mapConfig.rentStrikes = true;\n    } else if (inputVals.rentstrike === \"false\") {\n      mapConfig.rentStrikes = false;\n    }\n  }\n}\n","import { dispatch } from \"utils/dispatch\";\n\n/**\n * TitleDetails: // the collapsable <details> element in the <header>\n */\nexport class TitleDetails {\n  titleDetails = document\n    .getElementById(\"aemp-titlebox\")\n    .querySelector(\"details\");\n\n  constructor() {\n    this.bindListeners();\n  }\n\n  bindListeners = () => {\n    this.titleDetails.addEventListener(\"toggle\", function () {\n      if (this.open) {\n        document.getElementById(\"aemp-titlebox\").classList.remove(\"collapsed\");\n      } else {\n        document.getElementById(\"aemp-titlebox\").classList.add(\"collapsed\");\n      }\n    });\n\n    dispatch.on(\"title-details-toggle\", this.toggleTitleDetails);\n    dispatch.on(\"title-details-open\", this.openTitleDetails);\n    dispatch.on(\"title-details-close\", this.closeTitleDetails);\n  };\n\n  closeTitleDetails = () => {\n    this.titleDetails.open = false;\n  };\n\n  openTitleDetails = () => {\n    this.titleDetails.open = true;\n  };\n\n  toggleTitleDetails = () => {\n    if (this.titleDetails.open) {\n      this.titleDetails.open = false;\n    } else {\n      this.titleDetails.open = true;\n    }\n  };\n}\n"],"sourceRoot":""}